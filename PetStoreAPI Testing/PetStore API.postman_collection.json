{
	"info": {
		"_postman_id": "1ec9c670-ea53-42d2-99ff-f8eb5283169a",
		"name": "PetStore API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "16770065",
		"_collection_link": "https://bookingapitesting.postman.co/workspace/BookingAPITesting-Workspace~50211ca1-3f80-4380-8957-747f20fea1c8/collection/16770065-1ec9c670-ea53-42d2-99ff-f8eb5283169a?action=share&source=collection_link&creator=16770065"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Create a new pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var id = Math.floor(Math.random() * 1000);\r",
									"pm.environment.set(\"pet_id\",id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check the pet information\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(Number(pm.environment.get(\"pet_id\")));\r",
									"    pm.expect(jsonData.name).to.eql(\"doggie\"+pm.environment.get(\"pet_id\"));\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"    console.log(\"this is a test\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{pet_id}},\r\n  \"name\": \"doggie{{pet_id}}\",\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/pet"
					},
					"response": []
				},
				{
					"name": "Find Pet By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check the pet information\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(Number(pm.environment.get(\"pet_id\")));\r",
									"    pm.expect(jsonData.name).to.eql(\"doggie\"+pm.environment.get(\"pet_id\"));\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/pet/{{pet_id}}"
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check the pet information\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(Number(pm.environment.get(\"pet_id\")));\r",
									"    pm.expect(jsonData.name).to.eql(\"doggie\");\r",
									"    pm.expect(jsonData.status).to.eql(\"sold\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{pet_id}},\r\n  \"name\": \"doggie\",\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string{{pet_id}}\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/pet"
					},
					"response": []
				},
				{
					"name": "Get Existing pet details after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check the pet information\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(Number(pm.environment.get(\"pet_id\")));\r",
									"    pm.expect(jsonData.name).to.eql(\"doggie\");\r",
									"    pm.expect(jsonData.status).to.eql(\"sold\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/pet/{{pet_id}}"
					},
					"response": []
				},
				{
					"name": "Delete an existing pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.text()).to.include(\"Pet deleted\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}/pet/{{pet_id}}"
					},
					"response": []
				},
				{
					"name": "Get Existing pet is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, pet not found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.expect(pm.response.text()).to.include(\"Pet not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/pet/{{pet_id}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var userId = Math.floor(Math.random()*10000);\r",
									"console.log(userId);\r",
									"var userName = \"test\"+userId.toString();\r",
									"pm.environment.set(\"user_id\",userId);\r",
									"pm.environment.set(\"user_name\",userName);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check the user's information\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(Number(pm.environment.get(\"user_id\")));\r",
									"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"user_name\"));\r",
									"    pm.expect(jsonData.userStatus).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{user_id}},\r\n  \"username\": \"{{user_name}}\",\r\n  \"firstName\": \"John\",\r\n  \"lastName\": \"James\",\r\n  \"email\": \"{{user_name}}@email.com\",\r\n  \"password\": \"12345\",\r\n  \"phone\": \"12345\",\r\n  \"userStatus\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/user"
					},
					"response": []
				}
			]
		}
	]
}